{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://prism.proofspace.id/prism-credential-schema",
  "$comment": "TODO: get domain name in cardano ecosystem",
  "title": "PRISM Credential Schema Definition",
  "type": "object",
  "properties": {
     "name": { 
	     "type": "string",
	     "maxLength": 255,
	     "minLength": 1,
	     "title": "schema name",
	     "description": "schema name (arbitraty string)"
     },
     "version": { "type":  "string" },
     "description": { "type": "string" },
     "id": { 
        "type": "string",
	"$comment": "TODO: shoult be URI",
	"description": "Unique schema id. Publishing tool should check uniquiness of id during submtting schema to blockchain"
     },
     "author": { 
	 "$ref":  "#/$defs/did" 
     },
     "trustRegistry": {
	   "$ref": "#/$defs/trustRegistry"
     },
     "properties": {
	 "type" : "object",
	 "additionalProperties" : { "$ref": "#/$defs/field" }
     },
     "uniquiness": { "type": "array", "items": { "type":"string" }  },
     "comment": { "type": "string" }
  },
  "required": [ "name", "version", "id", "author", "trustRegistry", "properties" ],
  "$defs": {
     "trustRegistry": {
	 "title": "definition of trust registry",
         "type": "object",
	 "oneOf": [
	    { 
	      "type": "object",
	      "properties": {
		  "type": { "const" : "issuer"} ,
		  "issuer": { "$ref": "#/$defs/did" }
	       }
	    },
	    { 
	      "type": "object",
	      "properties": {
		  "type": { "const": "token-registry"} ,
		  "token": { "type": "string" }
	      }
	    },
	    { 
	      "type": "object",
	      "properties": {
		  "type": { "const" : "permissionless"} 
	       }
	    }
	 ]
     },
     "field": {
        "title": "credential field",
	"allOf": [
	  { "type": "object",
            "properties": {
	      "title": { "type": "string" },
	      "fieldName": {"type": "string"},
	      "description": { "type": "string" },
	      "contextUri": { "type": "string" },
	      "optional": { "type": "boolean" },
	      "disclosable": { "type": "boolean" },
	      "comparable": { "type": "boolean" },
	      "indexable": { "type": "boolean" },
	      "unique": { "type": "boolean" }
	     }
	  },
	  {
	   "oneOf" : [
             {
              "type" : "object",
              "properties" : {
		 "type" : { "const": "string" },
		 "pattern" : { "type": "string", 
			       "$comment": "TODO: define format for regexpr"
		             },
		 "minLength": {  "type" : "integer" },   	    
		 "maxLength": {  "type" : "integer" },
		 "multiline": {  "type" : "boolean",
			         "description": "should fields be displayed as multiline"
		              },
	         "keyboardHint": {  "type" : "string",
			       "$comment": "TODO: define enum"
		 }
	       }
	     },
	     {
              "type" : "object",
              "properties" : {
		 "type" : { "const": "integer" },
		 "minimum": { "type": "integer"},
		 "maximum": { "type": "integer"}
	      }
	     },
	     {
              "type" : "object",
              "properties" : {
		 "type" : { "const": "number" }
	      }
	     },
	     {
              "type" : "object",
              "properties" : {
		 "type" : { "const": "decimal" }
	      }
	     },
	     {
              "type" : "object",
              "properties" : {
		 "type" : { "const": "boolean" }
	      }
	     },
	     {
               "type" : "object",
               "properties" : {
		  "type" : { "const": "timestamp" },
		  "timeOf" : { "$ref": "#/$defs/timestampEvent" }
	       },
	       "$comment" : "string - RFC3339 timestamp"
	     },
	     {
               "type" : "object",
               "properties" : {
		  "type" : { "const": "date" }
	       },
	       "$comment" : "string - ISO8601 date"
	     },
	     {
               "type" : "object",
               "properties" : {
		  "type" : { "const": "enum" },
		  "values" : {  "type": "array", "items": { "type": "string" } }
	       }
	     },
	     {
               "type" : "object",
               "properties" : {
		  "type" : { "const": "array" },
		  "items" : { "$ref": "#/$defs/field"  }
	       }
	     }
           ]	   
	 } 
       ]
     },
     "did": {
	"type": "string",
	"title": "did",
	"description": "decentralizes identifier (did) as specified in 'https://www.w3.org/TR/did-core' "
     },
     "timestampEvent": {
	"title": "Event associated with timestamp",     
	"desription": "if present, denote a special value of timestamp field",
	"type": "string",
	"enum": [ "issuing", "expiration" ]
     }
  }  
}
